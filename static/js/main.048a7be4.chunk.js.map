{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","TodoList","todos","map","getUserById","userId","usersFromServer","find","person","todosWithUser","App","useState","selectedUser","setSelectedUser","customTitle","setCustomTitle","setToDos","isTitleError","setIsTitleError","isSelectError","setIsSelectError","onSubmit","event","preventDefault","Math","max","elem","length","placeholder","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.048a7be4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface UserInfoProps {\n  user: User;\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const { title, user, completed } = todo;\n\n  const className = completed ? 'TodoInfo TodoInfo--completed' : 'TodoInfo';\n\n  return (\n    <article data-id=\"16\" className={className}>\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React, { useState, ChangeEvent } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUserById(userId: number): User | null {\n  const user = usersFromServer.find((person) => person.id === userId);\n\n  return user || null;\n}\n\nconst todosWithUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [customTitle, setCustomTitle] = useState('');\n  const [todos, setToDos] = useState<Todo[]>(todosWithUser);\n\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isSelectError, setIsSelectError] = useState(false);\n\n  const handleCustomTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setCustomTitle(event.target.value);\n    setIsTitleError(false);\n  };\n\n  const handleSelectChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(event.target.value);\n    setIsSelectError(false);\n  };\n\n  const resetForm = () => {\n    setCustomTitle('');\n    setSelectedUser('');\n    setIsTitleError(false);\n    setIsSelectError(false);\n  };\n\n  const addTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const newId = Math.max(...todos.map((elem) => elem.id));\n    const userId = +selectedUser;\n\n    const todo: Todo = {\n      id: newId + 1,\n      title: customTitle,\n      completed: false,\n      userId: 0,\n      user: getUserById(userId),\n    };\n\n    if (!customTitle) {\n      setIsTitleError(true);\n    }\n\n    if (!selectedUser) {\n      setIsSelectError(true);\n    }\n\n    if (selectedUser.length && customTitle.length) {\n      setToDos([...todos, todo]);\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={addTodo}>\n        <div className=\"field\">\n          <input\n            placeholder=\"enter the title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={customTitle}\n            onChange={handleCustomTitle}\n          />\n          {isTitleError\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={handleSelectChange}\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n          {isSelectError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}